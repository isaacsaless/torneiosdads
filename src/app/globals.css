@import "tailwindcss";

:root {
  --primary-stripe-rgb: 230 230 230;
  --secondary-stripe-rgb: 240 240 240;
}


@keyframes pan {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 0%;
  }
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

/*
  Outgoing connector
 */


 .with-connector:after {
  content: ' ';
  position: absolute;
  left: calc(100% + 0.5rem); /* participant size (includes margin) */
  width: 1.25rem; /* round margin-right */
  border: 2px solid #e2e8f0;
  border-left: none;
}

.with-connector:nth-child(odd):after {
  top: 50%;
  border-bottom: none;
}

.with-connector:nth-child(even):after {
  bottom: 50%;
  border-top: none;
}

/* 
  height formula for a given round connector: 
  connectorHeight(roundNumber) = (margin + (lineHeight + padding)/2) * r^(n-1)

  where:
  - margin = 8px (.m-2)
  - line-height = 24px (.leading-relaxed)
  - padding = 4px (.p-1)
*/ 
.round:nth-child(1) .with-connector:after {
  height: 35px;
}

.round:nth-child(2) .with-connector:after {
  height: 60px;
}

.round:nth-child(2) .not-maain.with-connector:after {
  height: 90px;
}

.round:nth-child(3) .with-connector:after {
  height: 120px;
}

.round:nth-child(4) .with-connector:after {
  height: 200px;
}

.round.round-winner .with-connector:after {
  width: 0;
}

/*
  Incoming connector
 */

 .round + .round .com-connect.with-connector:before {
  content: ' ';
  position: absolute;
  left: -1.75rem;
  top: 50%;
  width: 1.25rem;
  border-top: 2px solid #e2e8f0;
}


/* 
  Byes
*/ 

.with-connector.with-bye {
  margin-top: 33px;
  margin-bottom: 33px;
}

.round .with-connector.with-bye:after {
  height: 0;
}

.with-connector.with-bye + .with-connector {
  display: none;
}

.finish:after{
  content: ' ';
  position: absolute;
  right: calc(100% + 0.5rem); /* participant size (includes margin) */
  width: 1.25rem; /* round margin-right */
  border: 1px solid #e2e8f0;
  border-left: none;
}

.background-brackets{
  background-size: 18px 18px;
  background-image: linear-gradient(
    -45deg,
    rgb(var(--primary-stripe-rgb)) 25%,
    rgb(var(--secondary-stripe-rgb)) 25%,
    rgb(var(--secondary-stripe-rgb)) 50%,
    rgb(var(--primary-stripe-rgb)) 50%,
    rgb(var(--primary-stripe-rgb)) 75%,
    rgb(var(--secondary-stripe-rgb)) 75%,
    rgb(var(--secondary-stripe-rgb)) 100%
  );
  box-shadow: inset 0rem 0.5rem 2rem 0.25rem rgb(0 0 0 / 40%);
  animation: pan 360s linear infinite;
}